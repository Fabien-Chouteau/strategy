pragma Ada_2022;

package Strategy is

   type Node is abstract tagged null record;
   --  Base type for value tree nodes. Instantiate the "Definite_Value_Tree"
   --  and "Indefinite_Value_Tree" package to define specialized Node base type
   --  for a given return type. Then implement a type that derives from this
   --  sepcialized base type.
   --
   --  The purpose of a Node is to find the simplest value that trigged a test
   --  failure. A node starts with a random value, which can then be refined
   --  into a simpler value using the Simplify and Complicate subprograms.

   function Simplify (This : in out Node) return Boolean
   is abstract;
   --  Try to make the node value "simpler". The definition of simpler value
   --  depends on the type and implementation, for numbers it usually means
   --  going towards smallest value, for containers having the lowest number
   --  of elements.
   --
   --  Return True when the state of the node has changed. Does not mean the
   --  value of the node is different.

   function Complicate (This : in out Node) return Boolean
   is abstract;
   --  Try to partially undo the simplification back to it's original value.
   --
   --  Return True when the state of the node has changed. Does not mean the
   --  value of the node is different.

   generic
      type Value is limited private;
   package Definite_Value_Tree is
      --  Defines an abstact value tree node for the given definite type

      type Value_Node is abstract new Node with private;

      function Current (This : in out Value_Node) return Value is abstract;
      --  Return the current value of the value tree node. The returned value
      --  should stay the same until Simplify() and Complicate() are called.

   private
      type Value_Node is abstract new Node with null record;
   end Definite_Value_Tree;

   generic
      type Value (<>) is limited private;
   package Indefinite_Value_Tree is
      --  Defines an abstact value tree node for the given indefinite type

      type Value_Node is abstract new Node with private;

      function Current (This : in out Value_Node) return Value is abstract;
      --  Return the current value of the value tree node. The returned value
      --  should stay the same until Simplify() and Complicate() are called.

   private
      type Value_Node is abstract new Node with null record;
   end Indefinite_Value_Tree;

   type Runner_Context is limited interface;
   --  Runner context to provide random generator seeds

   function Random_Initiator (This : in out Runner_Context) return Integer
   is abstract;

   generic
      type Value is limited private;
      with package Value_Tree is new Definite_Value_Tree (Value);
      type Node (<>) is new Value_Tree.Value_Node with private;

      pragma Warnings (Off, "not referenced");
      with function Create (Ctx : in out Runner_Context'Class) return Node;
      pragma Warnings (On, "not referenced");

   package Definite_Strategy is
      --  "Traits" like generic package that defines a value generation
      --  strategy for a definite type.
      --
      --  Value: the type of values generated by the strategy
      --
      --  Value_Tree: an instantiation of the Definite_Value_Tree package for
      --  the Value type.
      --
      --  Node: a type derived from the specialized value tree node for the
      --  Value type that implements the strategy.
      --
      --  Create: a function to instantiate a value tree node
   end Definite_Strategy;

   generic
      type Value (<>) is limited private;
      with package Value_Tree is new Indefinite_Value_Tree (Value);
      type Node (<>) is new Value_Tree.Value_Node with private;

      pragma Warnings (Off, "not referenced");
      with function Create (Ctx : in out Runner_Context'Class) return Node;
      pragma Warnings (On, "not referenced");

   package Indefinite_Strategy is
      --  "Traits" like generic package that defines a value generation
      --  strategy for an indefinite type.
      --
      --  Value: the type of values generated by the strategy
      --
      --  Value_Tree: an instantiation of the Indefinite_Value_Tree package for
      --  the Value type.
      --
      --  Node: a type derived from the specialized value tree node for the
      --  Value type that implements the strategy.
      --
      --  Create: a function to instantiate a value tree node
   end Indefinite_Strategy;

end Strategy;
